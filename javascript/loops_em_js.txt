Loops em JS

*Embora existam diferentes estruturas de laços de repetição em JS, estudaremos apenas a mais comun delas: for loop. Da mesma forma que a estrutura ‘for’ em Python, ele precisa de três parâmetros para ser executado corretamente, e nos permite usar uma variável contadora de forma dinâmica dentro do bloco de código.

*Sintaxe do ‘for loop’

A estrutura inicial para escrever um for loop em JS consiste da palavra reservada for, os parâmetros do loop entre parênteses, e o código a ser executado entre chaves.

for( ){

    // Código a ser executado "em loop"

}


*Dentro dos parênteses escreveremos os três parâmetros necessários, separados por ponto e vírgula.

- Variável contadora

   Declaramos uma variável e um valor inicial para ela

   É comum definir o nome da variável como ‘i’ de ‘índice’

   Exemplo: let i = 0;

-  Condição de parada

  Expressão avaliada antes do inicio de cada repetição

  Quando a expressão for avaliada como falsa a estrutura de repetição chega ao fim

  Exemplo: i < 10;

*- Incremento ou decremento

  Determina o aumento ou decremento a ser aplicado à variável contadora no fim de cada repetição

  JavaScript nos fornece a seguiet sintaxe simplificada para adicionar 1 à variável: i++

  Esta sintaxe simplificada é equivalente a: (i = i + 1). Isto é, atribuir à variável ‘i’ o “valor atual dela mais um”

*Aplicando os três parâmetros à nossa estrutura inicial, chegamos no seguinte código:

for(let i = 0; i < 10; i++){

    console.log(i);

}

No exemplo anterior, nosso código imprimirá os números do 0 ao 9, pois a condição de parada é a variável contadora ser menor que o número 10.

*Percorrer um array

Podemos usar os for loop para percorrer arrays da mesma forma que o fazemos em Python. A principal diferença é o uso da propriedade length do array. Length (do inglês “cumprimento”) é uma propriedade que nos retorna a quantidade de elementos num array. Para usar ele basta chamar a variável que guarda o array, seguida de um ponto ‘.’, e a palavra reservada length.

let letras = ['a', 'b', 'c'];
console.log(letras.length);

// Imprimirá '3' pois o array 'letras' tem três elementos

*Podemos usar a propriedade length para percorrer arrays em JS sem nos preocupar pela quantidade de elementos. Para fazer isso, devemos inclui-lo como condição de parada do nosso for loop da seguinte forma:

let letras = ['a', 'b', 'c'];

for(let i = 0; i < letras.length; i++){

    console.log(letras[i]);

}

// Imprimirá 'a', 'b', e 'c'

*No exemplo anterior estamos usando a variável dinâmica ‘i’ para acessar cada elemento do array, chamando o array (neste caso, letras) seguido da variável contadora entre colchetes. Isto é equivalente a imprimir “letras[0]” na primeira volta, “letras[01]” na segunda volta, e “letras[2]” na terceira e última volta.


































