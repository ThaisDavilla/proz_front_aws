Linguagens formais de consulta a bancos de dados

- Álgebra relacional

- Cálculo relacional

*Linguagens formais de consulta

Na criação de um banco de dados, o  principal objetivo é o armazenamento. Os dados devem ser persistentes e íntegros, pois as suas informações serão trabalhadas.

Usando as consultas que são implementadas na linguagem SQL, esses dados podem ser recuperados para o usuário ou para a aplicação do banco de dados.

Essa linguagem foi desenvolvida com base em outras de consultas formais como a álgebra relacional. 

*Álgebra relacional

A álgebra relacional é uma linguagem de consulta, onde os usuários passam instruções para o sistema executar e o mesmo executa o conjunto de instruções a fim de se obter um resultado desejado pelo usuário. O objetivo das instruções é acessar o banco de dados e coletar a informação que o usuário deseja.

A álgebra relacional é composta por uma série de operadores e as suas operações fundamentais.

Ela é a base formal para a implementação da linguagem SQL, que é uma linguagem comercial usada para aplicar estratégias disponíveis  no módulo de processamento de consultas interno dos Sistemas de Gerenciamento de Banco de Dados (SGBDs).

Esses módulos  incluem a funcionalidade da otimização de consultas, as quais são realizadas com o SGBD para extrair os dados que estão no banco.

*Nomeclaturas encontradas na Algebra Relacional

 Tuplas---------Linhas da tabela
 Atributos------Colunas da talela
 Relação-------A tabela

*A operação select

O operador select, ou a operação de seleção, seleciona tuplas das tabelas para atender a uma solicitação e extrair informações. 

A letra grega σ (sigma) representa a operação select, e a sua representação é da seguinte forma :

 σ<condição da seleção>(<nome da relação>)

A expressão booleana  <condição da seleção> é aplicada sobre atributos da tabela e  <nome da relação>  é em qual tabela a operação select será aplicada.

*A operação select

Neste exemplo, temos um operador select para selecionar as tuplas de uma tabela Aluno que possuem a nota do aluno maior que 7,0. Observe como o comando é utilizado em álgebra relacional:

 consulta1 = σ nota>7.0 (aluno)

Neste caso, o operador select seleciona as tuplas de uma tabela de nome DEPENDENTE. Os dados extraídos devem ser de filho e que seja do sexo masculino, utilizando o camando AND, pode-se consultar uma informação juntamente com outra, sendo filho e do sexo masculino.

consulta2 = σ (relação = "Filho").and(sexo = "Masc")(dependente)

*A operação project

A operação de projeção, ou project, permite escolher e separar um conjunto determinado de colunas de uma tabela. 

A operação project é representada pela letra grega π (pi), e a sua representação é da seguinte forma:

 π <lista de atributos>(nome da relação)

A parte <lista de atributos> representa a lista de atributos que o usuário selecionará na tabela. 

A parte <nome da relação> é em qual tabela vai ser aplicada a operação project. 

Neste exemplo, temos um project para selecionar as colunas Nome e Nota da tabela Aluno. Então, para que as colunas sejam extraídas, a nota do aluno deve ser maior que 7,0:

 Consulta3 = π nome, nota>7.0 (aluno)

Ao realizar a extração dos dados, serão apresentadas as colunas de nomes e notas, com os dados dos alunos que possuem nota maior que 7.

*Sequencialidade de operações

Na sequencialidade de operações, podemos combinar as operações de project e select. Assim, é possível extrair tuplas e colunas ao mesmo tempo.

Sua forma geral é:

 π<lista de atributos>(σ <condições de seleção>(nome da relação))

*Neste exemplo, temos uma combinação de operações, onde dados são extraídos de uma tabela (func)Funcionário. As colunas desta tabela a serem extraídas são: Nome, Depto(departamento) e Salário, já as tuplas que serão extraídas deve apresentar o valor de salário menor que dois mil:

Consulta4 = π nome, depto, salário(σ salario<2000(func.))

Ao realizar essa extração, será apresentada a seguinte consulta, com o nome de dois funcionários, o departamento em que trabalham e o salário que recebem.

*Operações matemáticas

As relações também podem ser tratadas como conjuntos, logo, pode-se aplicar operações matemáticas sobre elas.

As operações são: 

 --união - representada pelo símbolo U;

 --Interseção - representada pelo símbolo ∩; e 

 --diferença - representada pelo símbolo ≠. 

Esses operadores podem ser aplicados em mais de uma tabela, por isso são chamados de operadores não unários.

As operações não unárias precisam, necessariamente, de mais de uma relação para acontecer. Elas atuam em relações compatíveis, ou seja, aquelas que possuem o mesmo grau, ou mesmo número, de atributos que têm o mesmo domínio.

 *Operações matemáticas: união

A união entre os conjuntos R U S, por exemplo, vai retornar todas as tuplas de R, de S e as em comum entre R e S, ou seja, a intersecção.

O resultado da operação R U S é uma nova tabela, que inclui todas as tuplas que estão em R e em S. 

Neste exemplo, temos a união das tabelas Aluno e Professor. Observe que a tabela Aluno U Prof, criada com a união dos dados, contém todos os dados de ambas. Porém, se existir dados iguais nas duas, é mostrado apenas um na tabela de resultado.

Argumento: Aluno U Prof      

*Operações matemáticas: intersecção

A operação de intersecção retorna apenas o que existe em comum entre duas tabelas R ∩ S. Então, o seu resultado é uma nova relação que inclui todas as tuplas que estão em R, em S e na intersecção entre ambas, retornando apenas o que existe em comum entre as duas relações.

 Aqui, temos a intersecção das tabelas Aluno e Professor. Observe que a tabela Aluno ∩ Prof, criada com a intersecção dos dados, contém todos os dados que são iguais em ambas as tabelas.


Argumento: Aluno ∩ Professor

*Operações matemáticas: diferença

A operação de diferença também é não unária, ou seja, precisa de mais de uma tabela. Ela retorna todas as tuplas pertencentes a R mas que não pertencem a S. 

É importante saber que ela não é comutativa, diferente das operações de união e de intersecção. Logo, R - S é diferente de S - R.

Aqui, temos a diferença das tabelas Aluno e Professor. Observe que a tabela resultado da diferença contém todos os dados que pertencem à tabela Aluno e não pertencem à tabela Professor.

Argumento: Aluno ≠ Professor

*Cálculo relacional

Cálculo relacional é uma linguagem formal de consultas para banco de dados relacionais. Ela é não procedimental, ou seja, a ordem não importa, diferentemente da álgebra relacional que as operações devem ser executadas em uma determinada ordem.

A expressão criada para executar uma operação em cálculo relacional independe da ordem e específica o que deve ser recuperado, invés de como recuperar.
Além disso, toda expressão criada em cálculo relacional consegue se expressar na álgebra  relacional, o mesmo acontece ao contrário. 

O cálculo e a álgebra relacionais são linguagens que definiram a base de consultas para bancos de dados relacionais.

*A álgebra relacional e o cálculo relacional

A álgebra relacional é responsável por definir as operações do modelo relacional e o cálculo relacional, por especificar uma consulta declarativa, já que é uma linguagem de consulta formal e utiliza a expressão declarativa.

Sem especificar os procedimentos, a expressão desse cálculo permite a descrição da consulta que desejar.


 

 

 

 

 




















