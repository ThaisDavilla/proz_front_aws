Conceitos de function e procedure

**Function e procedure

A rotina é composta por tarefas inevitáveis, como tirar o lixo de casa e forrar a cama.
Assim como nós, os banco de dados também tem rotinas importantes que são identificadas por um nome definido, que são: função, ou function, e procedimento, ou procedure.

*Entendendo a function
A função é uma rotina armazenada. Ela executa uma determinada ação, cujo resultado retorna algum valor.

Para criar uma função, é necessário entender como ela funciona, ou seja, compreender a sua sintaxe básica.

A sintaxe é:

CREATE FUNCTION nome_função (parâmetros)

RETURNS tipos_dados

Código_da_funcao;

(https://imasters.com.br/banco-de-dados/voce-sabe-o-que-e-uma-function)
(http://www.bosontreinamentos.com.br/mysql/mysql-rotinas-armazenadas-funcoes-create-function)

As palavras usadas na criação de uma função são create function. Essa rotina precisa de um nome para ser referenciada. Além disso, é necessário  apresentar os parâmetros que serão utilizados na função dentro dos parênteses.

A palavra returns indica o dado que retornou pela função. Em seguida, o código que compõe a função criada é executado.

Nesta função teste, temos dois parâmetros: a, que é do tipo decimal, e b, que é do tipo inteiro.

Observe o exemplo de como criar uma função: 

CREATE FUNCTION teste (a DECIMAL(4,2), b INT)

 RETURNS int

 DETERMINISTIC

 return a * b;

Através do returns, o valor do resultado será retornado e ele deve ser inteiro

Em seguida, declaramos se a função é deterministic (determinística) ou not deterministic (não determinística). Uma função é determinística se produzir o mesmo resultado para os mesmos parâmetros de entrada. Caso contrário, ela é não determinística.

O return informa qual é o valor da função que deve ser retornado. Nesse exemplo, será o resultado da multiplicação dos parâmetros a e b.

**Utilizando uma function

Para invocar uma função, usamos a seguinte linha de código:

SELECT nome_função(parâmetros);

No exemplo, veremos como invocar a função do exemplo anterior. Utilizaremos o select para selecionar a função teste e passaremos os valores para a e b separados por vírgula. O resultado da multiplicação ficará guardado em resultado.

SELECT teste (5.5, 4) AS resultado;

Visto que os valores são a = 5.5 e b = 4, o resultado da multiplicação será 22.

*Excluindo uma function

Se quisermos excluir uma função, utilizamos o comando:

DROP FUNCTION nome_função;

Para excluir a nossa função teste utilizada anteriormente, podemos utilizar a seguinte linha de comando:

DROP FUNCTION teste;

**Definindo um procedure

Um procedimento, ou procedure, é uma instrução ou um grupo de instruções organizadas para executar tarefas. Ele pode ser usado através de uma simples invocação, que executa uma série de outros comandos.

O procedimento é uma instrução para executar tarefas.
(https://www.devmedia.com.br/stored-procedures-e-functions-no-mysql-com-phpmyadmin/30837)

*Entendendo o procedure

A seguir, veremos como criar a estrutura de um procedure com cada trecho explicado detalhadamente.

A sintaxe é:

CREATE PROCEDURE nome_procedimento (parâmetros)

declarações;

(http://www.bosontreinamentos.com.br/mysql/mysql-procedimentos-armazenados-stored-procedures-basico-34/)

As palavras usadas para criar um procedimento são create procedure. Ele precisa de um nome para ser referenciado. Além disso, é necessário  apresentar os parâmetros que serão utilizados dentro dos parênteses. Por fim, as declarações serão definidas. Vamos observar o exemplo detalhado.

Aqui, temos a criação do procedure saberPreço. Entre os parênteses, temos a variável alimento, um parâmetro do tipo smallint, que são números inteiros.

CREATE PROCEDURE saberPreço (alimento smallint)

select concat('O valor é ', preço) AS preços

from tabela_alimento

where id_alimento = alimento;

O id_alimento indica o alimento que corresponde ao preço exibido.

Esse procedimento concatena duas informações. Nesse caso, ele junta o texto O valor é com o preço do alimento. Essa informação será apresentada na coluna preços.where id_alimento = alimento;

CREATE PROCEDURE saberPreço (alimento smallint)

select concat('O valor é ', preço) AS preços

from tabela_alimento

where id_alimento = alimento;

Os dados de alimentos e preço estão na tabela de nome tabela_alimento.

**Observe a tabela
id_alimento   nome_alimento   preco
1                   arroz                 6.6
2                   feijão                4.2
3                   goiaba               4
4                   queijo               16.5

Para invocar um procedimento, utilizamos o seguinte código:

CALL nome_procedimento(parâmetros);

No nosso caso, vamos usar:

CALL saberPreço (3);

Assim, conseguimos saber qual é o preço do alimento que se encontra na posição 3 da tabela. Nesse caso, é a goiaba, com o preço 4.

**Excluindo um procedure
Para excluir um procedimento, basta executar:

DROP PROCEDURE nome_procedimento;

Dessa forma, para excluir o procedimento que criamos, utilizaremos o comando:

DROP PROCEDURE saberPreço;

**Function e procedure
As principais diferenças entre eles são que a function sempre retorna um valor, não necessita de parâmetros de entrada e saída e pode ser chamada dentro de um procedimento.

Já o procedure nem sempre retorna um valor, pois é opcional, necessita de parâmetros de entrada e saída e não pode ser chamado dentro de uma função.

(https://codigosimples.net/2016/02/24/principais-diferencas-entre-stored-procedures-e-functions)









